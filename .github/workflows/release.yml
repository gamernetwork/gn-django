name: Release package

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Determine package full name
      run: echo "PKG_FULLNAME=$(python setup.py --fullname)" >> $GITHUB_ENV
    - name: Determine package version
      run: echo "PKG_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Create source distribution
      run: python setup.py sdist
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PKG_VERSION }}
        release_name: ${{ env.PKG_VERSION }}
        draft: false
        prerelease: false
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{ env.PKG_FULLNAME }}.tar.gz
        asset_name: ${{ env.PKG_FULLNAME }}.tar.gz
        asset_content_type: application/gzip
    - name: Upload package to Gemfury
      run: curl -fF package=@dist/${{ env.PKG_FULLNAME }}.tar.gz https://${{ secrets.FURY_AUTH_PUSH }}@push.fury.io/gamernetwork/
    - name: Slack notification
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        MSG_MINIMAL: true
        SLACK_ICON_EMOJI: ":octocat:"
        SLACK_TITLE: "Released ${{ env.PKG_FULLNAME }}"
        SLACK_USERNAME: "GitHub"
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
